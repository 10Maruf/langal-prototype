import { useNavigate } from "react-router-dom";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { TTSButton } from "@/components/ui/tts-button";
import {
    TrendingUp,
    Users,
    CloudSun
} from "lucide-react";

// Import dashboard icons
import socialFeedIcon from "@/assets/dashboard-icons/social-feed.png";
import cropSelectionIcon from "@/assets/dashboard-icons/crop-selection.png";
import diagnosisIcon from "@/assets/dashboard-icons/diagnosis.png";
import marketplaceIcon from "@/assets/dashboard-icons/marketplace.png";
import weatherIcon from "@/assets/dashboard-icons/weather.png";
import marketPriceBdIcon from "@/assets/dashboard-icons/market-price-bd.png";
import newsIcon from "@/assets/dashboard-icons/news.png";
import consultationIcon from "@/assets/dashboard-icons/consultation.png";

const FarmerDashboard = () => {
    const navigate = useNavigate();

    // ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶Ü‡¶á‡¶ï‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∞‡ßÅ‡¶ü ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶™‡¶ø‡¶Ç
    const dashboardItems = [
        {
            id: "social",
            title: "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶´‡¶ø‡¶°",
            description: "‡¶ï‡ßÉ‡¶∑‡¶ï ‡¶∏‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶Ø‡¶º‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®",
            image: socialFeedIcon,
            route: "/social-feed",
            color: "bg-blue-500",
            stats: "‡ß®‡ß™‡ß´ ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßã‡¶∏‡ßç‡¶ü"
        },
        {
            id: "recommendation",
            title: "‡¶´‡¶∏‡¶≤ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®",
            description: "‡¶â‡¶™‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶´‡¶∏‡¶≤ ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶®",
            image: cropSelectionIcon,
            route: "/recommendation",
            color: "bg-green-500",
            stats: "‡ßß‡ß´ ‡¶ü‡¶ø ‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂"
        },
        {
            id: "diagnosis",
            title: "‡¶∞‡ßã‡¶ó ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡¶Ø‡¶º",
            description: "‡¶´‡¶∏‡¶≤‡ßá‡¶∞ ‡¶∞‡ßã‡¶ó ‡¶∂‡¶®‡¶æ‡¶ï‡ßç‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®",
            image: diagnosisIcon,
            route: "/diagnosis",
            color: "bg-red-500",
            stats: "AI ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ"
        },
        {
            id: "marketplace",
            title: "‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞",
            description: "‡¶ï‡ßá‡¶®‡¶æ‡¶¨‡ßá‡¶ö‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®",
            image: marketplaceIcon,
            route: "/marketplace",
            color: "bg-purple-500",
            stats: "‡ßÆ‡ßØ ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡¶£‡ßç‡¶Ø"
        },
        {
            id: "weather",
            title: "‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ",
            description: "‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®",
            image: weatherIcon,
            route: "/weather-planning",
            color: "bg-orange-500",
            stats: "‡ß≠ ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡¶æ‡¶≠‡¶æ‡¶∏"
        },
        {
            id: "news",
            title: "‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡¶¶‡¶∞",
            description: "‡¶¶‡ßà‡¶®‡¶ø‡¶ï ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡¶¶‡¶∞ ‡¶ì ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ",
            image: marketPriceBdIcon,
            route: "/news-feed",
            color: "bg-cyan-500",
            stats: "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶¶‡¶∞"
        },
        {
            id: "agricultural-news",
            title: "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶",
            description: "‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶¨‡¶ø‡¶∑‡¶Ø‡¶º‡¶ï ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶ ‡¶ì ‡¶§‡¶•‡ßç‡¶Ø",
            image: newsIcon,
            route: "/news-feed", 
            color: "bg-amber-500",
            stats: "‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡¶Ç‡¶¨‡¶æ‡¶¶"
        },
        {
            id: "consultation",
            title: "‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂",
            description: "‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û‡¶¶‡ßá‡¶∞ ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂ ‡¶®‡¶ø‡¶®",
            image: consultationIcon,
            route: "/consultation",
            color: "bg-indigo-500",
            stats: "‡ß®‡ß™/‡ß≠ ‡¶∏‡ßá‡¶¨‡¶æ"
        }
    ];

    const handleNavigation = (route: string) => {
        navigate(route);
    };

    const quickStats = [
        { label: "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶¶‡¶∞", value: "‡¶ß‡¶æ‡¶® ‡ß®‡ßÆ ‡¶ü‡¶æ‡¶ï‡¶æ/‡¶ï‡ßá‡¶ú‡¶ø", icon: TrendingUp, color: "text-green-600" },
        { label: "‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º ‡¶ï‡ßÉ‡¶∑‡¶ï", value: "‡ß®,‡ß´‡ß™‡ß© ‡¶ú‡¶®", icon: Users, color: "text-blue-600" },
        { label: "‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ", value: "‡ß®‡ßÆ¬∞‡¶∏‡ßá, ‡¶Æ‡ßá‡¶ò‡¶≤‡¶æ", icon: CloudSun, color: "text-orange-600" }
    ];

    return (
        <div className="p-4 pb-20 space-y-6">
            {/* ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ */}
            <Card className="bg-gradient-to-r from-green-500 to-green-600 text-white">
                <CardContent className="p-6">
                    <div className="flex items-center justify-between">
                        <div>
                            <h1 className="text-2xl font-bold mb-2">‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ, ‡¶ï‡ßÉ‡¶∑‡¶ï ‡¶≠‡¶æ‡¶á!</h1>
                            <p className="text-green-100">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶õ‡¶ø</p>
                        </div>
                        <div className="text-right">
                            <p className="text-lg font-semibold">{new Date().toLocaleDateString('bn-BD')}</p>
                            <p className="text-green-100 text-sm">‡¶Ü‡¶ú</p>
                        </div>
                    </div>
                </CardContent>
            </Card>

            {/* ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶§‡¶•‡ßç‡¶Ø */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {quickStats.map((stat, index) => (
                    <Card key={index} className="border-l-4 border-l-primary">
                        <CardContent className="p-4">
                            <div className="flex items-center space-x-3">
                                <stat.icon className={`h-8 w-8 ${stat.color}`} />
                                <div>
                                    <p className="text-sm text-muted-foreground">{stat.label}</p>
                                    <p className="font-semibold">{stat.value}</p>
                                </div>
                            </div>
                        </CardContent>
                    </Card>
                ))}
            </div>

            {/* ‡¶Æ‡ßÇ‡¶≤ ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶Æ‡ßá‡¶®‡ßÅ */}
            <div>
                <div className="flex items-center justify-between mb-4">
                    <h2 className="text-xl font-bold">‡¶Æ‡ßÇ‡¶≤ ‡¶Æ‡ßá‡¶®‡ßÅ</h2>
                    <TTSButton
                        text="‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶Æ‡ßá‡¶®‡ßÅ‡•§ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶´‡¶ø‡¶°, ‡¶´‡¶∏‡¶≤ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶®, ‡¶∞‡ßã‡¶ó ‡¶®‡¶ø‡¶∞‡ßç‡¶£‡¶Ø‡¶º, ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞, ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ, ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞‡¶¶‡¶∞, ‡¶è‡¶¨‡¶Ç ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§"
                        size="icon"
                        variant="ghost"
                    />
                </div>

                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                    {dashboardItems.map((item) => {
                        return (
                            <Card
                                key={item.id}
                                className="cursor-pointer transition-all duration-200 hover:shadow-lg hover:scale-105 border-2 hover:border-primary/50"
                                onClick={() => handleNavigation(item.route)}
                            >
                                <CardContent className="p-6 text-center space-y-3">
                                    <div className="mx-auto w-20 h-20 bg-white rounded-2xl shadow-lg flex items-center justify-center p-2">
                                        <img 
                                            src={item.image} 
                                            alt={item.title}
                                            className="w-full h-full object-contain"
                                        />
                                    </div>

                                    <div>
                                        <h3 className="font-bold text-lg mb-1">{item.title}</h3>
                                        <p className="text-sm text-muted-foreground mb-2 leading-relaxed">
                                            {item.description}
                                        </p>
                                        <Badge variant="secondary" className="text-xs">
                                            {item.stats}
                                        </Badge>
                                    </div>

                                    <div className="mt-2">
                                        <TTSButton
                                            text={`${item.title}‡•§ ${item.description}‡•§ ${item.stats}`}
                                            size="icon"
                                            variant="outline"
                                        />
                                    </div>
                                </CardContent>
                            </Card>
                        );
                    })}
                </div>
            </div>

            {/* ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó */}
            <Card>
                <CardContent className="p-6">
                    <div className="text-center space-y-3">
                        <h3 className="text-lg font-semibold">‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®?</h3>
                        <p className="text-muted-foreground">
                            ‡¶ï‡ßã‡¶® ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
                        </p>
                        <div className="flex flex-col sm:flex-row gap-2 justify-center">
                            <Badge variant="outline" className="py-2 px-4">
                                üìû ‡¶π‡¶ü‡¶≤‡¶æ‡¶á‡¶®: ‡ßß‡ß¨‡ßß‡ß®‡ß©
                            </Badge>
                            <Badge variant="outline" className="py-2 px-4">
                                üì± SMS: ‡ßß‡ß¨‡ßß‡ß®‡ß©
                            </Badge>
                        </div>
                    </div>
                </CardContent>
            </Card>
        </div>
    );
};

export default FarmerDashboard;
